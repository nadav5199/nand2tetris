// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=aOut, b=bOut, c=cOut, d=dOut, e=eOut, f=fOut, g=gOut, h=hOut);
    RAM8(in=in, load=aOut, address=address[3..5], out=outA);
    RAM8(in=in, load=bOut, address=address[3..5], out=outB);
    RAM8(in=in, load=cOut, address=address[3..5], out=outC);
    RAM8(in=in, load=dOut, address=address[3..5], out=outD);
    RAM8(in=in, load=eOut, address=address[3..5], out=outE);
    RAM8(in=in, load=fOut, address=address[3..5], out=outF);
    RAM8(in=in, load=gOut, address=address[3..5], out=outG);
    RAM8(in=in, load=hOut, address=address[3..5], out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[0..2], out=out);
}
